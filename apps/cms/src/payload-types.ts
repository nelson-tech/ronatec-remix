/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export type ProductItems = {
  product: string | Product;
  variation?: {
    name?: string;
    option?: string;
    id?: string;
  }[];
  title: string;
  price: string;
  quantity: number;
  id?: string;
}[];
export type VideoLink = {
  title?: string;
  provider?: 'direct' | 'youtube' | 'other';
  video?: string | Media;
  videoId?: string;
  url?: string;
  placeholderImage?: string | Media;
  id?: string;
}[];
export type ConsultingSlides = {
  label?: string;
  image?: string | Media;
  id?: string;
}[];
export type Card = {
  title?: string;
  content?: string;
  image?: string | Media;
  icon?: {
    name?: string;
    type?: 'brand' | 'duotone' | 'light' | 'regular' | 'solid';
  };
  link?: {
    label?: string;
    url?: string;
  };
  id?: string;
}[];
export type MapMarker = {
  label?: string;
  lat?: number;
  lon?: number;
  icon?: {
    name?: string;
    type?: 'brand' | 'duotone' | 'light' | 'regular' | 'solid';
  };
  id?: string;
}[];
export type MainMenuLink = {
  link: {
    megaColumn?: boolean;
    header?: boolean;
    type?: 'custom' | 'reference' | 'textOnly';
    reference?:
      | {
          value: string | Page;
          relationTo: 'pages';
        }
      | {
          value: string | Product;
          relationTo: 'products';
        }
      | {
          value: string | Category;
          relationTo: 'categories';
        };
    url?: string;
    label: string;
    newTab?: boolean;
    megaMenu?: boolean;
    children?: {
      megaColumn?: boolean;
      header?: boolean;
      type?: 'custom' | 'reference' | 'textOnly';
      reference?:
        | {
            value: string | Page;
            relationTo: 'pages';
          }
        | {
            value: string | Product;
            relationTo: 'products';
          }
        | {
            value: string | Category;
            relationTo: 'categories';
          };
      url?: string;
      label: string;
      newTab?: boolean;
      megaMenu?: boolean;
      children?: {
        megaColumn?: boolean;
        header?: boolean;
        type?: 'custom' | 'reference' | 'textOnly';
        reference?:
          | {
              value: string | Page;
              relationTo: 'pages';
            }
          | {
              value: string | Product;
              relationTo: 'products';
            }
          | {
              value: string | Category;
              relationTo: 'categories';
            };
        url?: string;
        label: string;
        newTab?: boolean;
        megaMenu?: boolean;
        children?: {
          megaColumn?: boolean;
          header?: boolean;
          type?: 'custom' | 'reference' | 'textOnly';
          reference?:
            | {
                value: string | Page;
                relationTo: 'pages';
              }
            | {
                value: string | Product;
                relationTo: 'products';
              }
            | {
                value: string | Category;
                relationTo: 'categories';
              };
          url?: string;
          label: string;
          newTab?: boolean;
          megaMenu?: boolean;
          id?: string;
        }[];
        id?: string;
      }[];
      id?: string;
    }[];
  };
  id?: string;
}[];
export type MobileMenuLink = {
  link: {
    type?: 'custom' | 'reference' | 'textOnly';
    reference?:
      | {
          value: string | Page;
          relationTo: 'pages';
        }
      | {
          value: string | Product;
          relationTo: 'products';
        }
      | {
          value: string | Category;
          relationTo: 'categories';
        };
    url?: string;
    label: string;
    newTab?: boolean;
    children?: {
      type?: 'custom' | 'reference' | 'textOnly';
      reference?:
        | {
            value: string | Page;
            relationTo: 'pages';
          }
        | {
            value: string | Product;
            relationTo: 'products';
          }
        | {
            value: string | Category;
            relationTo: 'categories';
          };
      url?: string;
      label: string;
      newTab?: boolean;
      children?: {
        type?: 'custom' | 'reference' | 'textOnly';
        reference?:
          | {
              value: string | Page;
              relationTo: 'pages';
            }
          | {
              value: string | Product;
              relationTo: 'products';
            }
          | {
              value: string | Category;
              relationTo: 'categories';
            };
        url?: string;
        label: string;
        newTab?: boolean;
        id?: string;
      }[];
      id?: string;
    }[];
  };
  id?: string;
}[];

export interface Config {
  collections: {
    pages: Page;
    media: Media;
    products: Product;
    categories: Category;
    tags: Tag;
    carts: Cart;
    orders: Order;
    users: User;
    employees: Employee;
    suppliers: Supplier;
  };
  globals: {
    home: Home;
    consulting: Consulting;
    about: About;
    contact: Contact;
    warehouses: Warehouse;
    menus: Menu;
    settings: Settings;
  };
}
export interface Page {
  id: string;
  title: string;
  publishedDate?: string;
  hero: {
    type: 'none' | 'highImpact' | 'mediumImpact' | 'lowImpact';
    richText: {
      [k: string]: unknown;
    }[];
    links?: {
      link: NavLink;
      id?: string;
    }[];
    media: string | Media;
  };
  layout: (
    | {
        ctaBackgroundColor?: 'white' | 'black';
        richText: {
          [k: string]: unknown;
        }[];
        links?: {
          link: NavLink;
          id?: string;
        }[];
        id?: string;
        blockName?: string;
        blockType: 'cta';
      }
    | {
        columns?: {
          size?: 'oneThird' | 'half' | 'twoThirds' | 'full';
          richText: {
            [k: string]: unknown;
          }[];
          enableLink?: boolean;
          link?: NavLink;
          id?: string;
        }[];
        id?: string;
        blockName?: string;
        blockType: 'content';
      }
    | {
        mediaBlockBackgroundColor?: 'white' | 'black';
        position?: 'default' | 'fullscreen';
        media: string | Media;
        id?: string;
        blockName?: string;
        blockType: 'mediaBlock';
      }
    | {
        introContent: {
          [k: string]: unknown;
        }[];
        populateBy?: 'collection' | 'selection';
        relationTo?: 'products';
        categories?: string[] | Category[];
        limit?: number;
        selectedDocs?:
          | {
              value: string;
              relationTo: 'products';
            }[]
          | {
              value: Product;
              relationTo: 'products';
            }[];
        populatedDocs?:
          | {
              value: string;
              relationTo: 'products';
            }[]
          | {
              value: Product;
              relationTo: 'products';
            }[];
        populatedDocsTotal?: number;
        id?: string;
        blockName?: string;
        blockType: 'archive';
      }
  )[];
  slug?: string;
  updatedAt: string;
  createdAt: string;
  _status?: 'draft' | 'published';
}
export interface NavLink {
  type?: 'custom' | 'reference';
  reference:
    | {
        value: string | Page;
        relationTo: 'pages';
      }
    | {
        value: string | Product;
        relationTo: 'products';
      }
    | {
        value: string | Category;
        relationTo: 'categories';
      };
  url: string;
  label: string;
  appearance?: 'default' | 'primary' | 'secondary';
  newTab?: boolean;
  megaMenu?: boolean;
}
export interface Product {
  id: string;
  title: string;
  shortDescription?: string;
  description?: string;
  gallery?: {
    image?: string | Media;
    id?: string;
  }[];
  variations?: {
    name?: string;
    slug?: string;
    options?: {
      label?: string;
      sku?: string;
      id?: string;
    }[];
    id?: string;
  }[];
  hasVariation?: boolean;
  wc?: {
    wc_id?: number;
    name?: string;
    slug?: string;
    parent?: number;
    type?: string;
    permalink?: string;
    sku?: string;
    short_description?: string;
    description?: string;
    on_sale?: boolean;
    prices?: {
      price?: string;
      regular_price?: string;
      sale_price?: string;
      price_range?: string;
      currency_code?: string;
      currency_symbol?: string;
      currency_minor_unit?: number;
      currency_decimal_separator?: string;
      currency_thousand_separator?: string;
      currency_prefix?: string;
      currency_suffix?: string;
    };
    price_html?: string;
    average_rating?: string;
    review_count?: number;
    images?: {
      wc_id?: number;
      src?: string;
      thumbnail?: string;
      srcset?: string;
      sizes?: string;
      name?: string;
      alt?: string;
      id?: string;
    }[];
    categories?: {
      wc_id?: number;
      name?: string;
      slug?: string;
      link?: string;
      id?: string;
    }[];
    tags?: {
      id?: string;
    }[];
    attributes?: {
      wc_id?: number;
      name?: string;
      taxonomy?: string;
      has_variations?: boolean;
      terms?: {
        wc_id?: number;
        name?: string;
        slug?: string;
        id?: string;
      }[];
      id?: string;
    }[];
    variations?: {
      id?: string;
    }[];
    has_options?: boolean;
    is_purchasable?: boolean;
    is_in_stock?: boolean;
    is_on_backorder?: boolean;
    low_stock_remaining?: boolean;
    sold_individually?: boolean;
    add_to_cart?: {
      text?: string;
      description?: string;
      url?: string;
      minimum?: number;
      maximum?: number;
      multiple_of?: number;
      extensions?: string;
    };
  };
  slug?: string;
  sku?: string;
  featuredImage?: string | Media;
  categories?: string[] | Category[];
  tags?: string[] | Tag[];
  publishedDate?: string;
  sold?: number;
  lanco?: boolean;
  price?: string;
  meta?: Meta;
  updatedAt: string;
  createdAt: string;
  _status?: 'draft' | 'published';
}
export interface Media {
  id: string;
  alt: string;
  caption?: {
    [k: string]: unknown;
  }[];
  updatedAt: string;
  createdAt: string;
  url?: string;
  filename?: string;
  mimeType?: string;
  filesize?: number;
  width?: number;
  height?: number;
  sizes?: {
    square?: {
      url?: string;
      width?: number;
      height?: number;
      mimeType?: string;
      filesize?: number;
      filename?: string;
    };
    sixteenByNineMedium?: {
      url?: string;
      width?: number;
      height?: number;
      mimeType?: string;
      filesize?: number;
      filename?: string;
    };
  };
}
export interface Category {
  id: string;
  title?: string;
  slug?: string;
  image?: string | Media;
  lanco?: boolean;
  parent?: string | Category;
  description?: string;
  breadcrumbs?: {
    doc?: string | Category;
    url?: string;
    label?: string;
    id?: string;
  }[];
  wc?: {
    wc_id?: number;
    name?: string;
    slug?: string;
    description?: string;
    parent?: number;
    count?: number;
    image?: {
      wc_id?: number;
      src?: string;
      thumbnail?: string;
      srcset?: string;
      sizes?: string;
      name?: string;
      alt?: string;
    };
    review_count?: number;
    permalink?: string;
  };
  tags?: string[] | Tag[];
  updatedAt: string;
  createdAt: string;
  _status?: 'draft' | 'published';
}
export interface Tag {
  id: string;
  name?: string;
  slug?: string;
  updatedAt: string;
  createdAt: string;
}
export interface Meta {
  title?: string;
  description?: string;
  image?: string | Media;
}
export interface Cart {
  id: string;
  items?: ProductItems;
  count?: number;
  user?: string | User;
  lastEdit?: number;
  updatedAt: string;
  createdAt: string;
}
export interface User {
  id: string;
  name?: string;
  roles?: ('admin' | 'customer')[];
  purchases?: string[] | Product[];
  cart?: string | Cart;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string;
  resetPasswordExpiration?: string;
  salt?: string;
  hash?: string;
  loginAttempts?: number;
  lockUntil?: string;
  password?: string;
}
export interface Order {
  id: string;
  orderNumber?: number;
  status?: 'pending' | 'complete' | 'cancelled';
  orderedBy?: {
    user?: string | User;
    name?: {
      first?: string;
      last?: string;
    };
    email?: string;
    phone?: string;
    company?: string;
  };
  items?: ProductItems;
  notified?: boolean;
  cartId: string;
  updatedAt: string;
  createdAt: string;
}
export interface Employee {
  id: string;
  name?: string;
  position?: string;
  contact?: {
    email?: string;
    phone?: {
      orders?: string;
      office?: string;
      fax?: string;
    };
    address?: string;
  };
  regions?: string;
  updatedAt: string;
  createdAt: string;
  _status?: 'draft' | 'published';
}
export interface Supplier {
  id: string;
  title?: string;
  description?: string;
  image?: string | Media;
  url?: string;
  updatedAt: string;
  createdAt: string;
  _status?: 'draft' | 'published';
}
export interface Home {
  id: string;
  hero: {
    title?: string;
    subTitle?: string;
    content?: string;
    buttons?: {
      label?: string;
      url?: string;
      className?: string;
      id?: string;
    }[];
  };
  carousels: {
    categories?: {
      label?: string;
      link?: {
        label?: string;
        url?: string;
      };
      categories?: string[] | Category[];
    };
  };
  cards?: {
    title?: string;
    content?: string;
    icon?: {
      name?: string;
      type?: 'brand' | 'duotone' | 'light' | 'regular' | 'solid';
    };
    link?: {
      label?: string;
      url?: string;
    };
    id?: string;
  }[];
  videos?: VideoLink;
  featuredSupplier?: string | Supplier;
  updatedAt?: string;
  createdAt?: string;
}
export interface Consulting {
  id: string;
  slides?: ConsultingSlides;
  content?: string;
  certificates: {
    cards?: Card;
  };
  cards: {
    cards?: Card;
  };
  callout?: {
    content?: string;
    style?: string;
  };
  updatedAt?: string;
  createdAt?: string;
}
export interface About {
  id: string;
  cards?: Card;
  updatedAt?: string;
  createdAt?: string;
}
export interface Contact {
  id: string;
  cards?: Card;
  map?: Map;
  salesReps?: string[] | Employee[];
  updatedAt?: string;
  createdAt?: string;
}
export interface Map {
  center?: {
    lat?: number;
    lon?: number;
  };
  markers?: MapMarker;
}
export interface Warehouse {
  id: string;
  map?: Map;
  updatedAt?: string;
  createdAt?: string;
}
export interface Menu {
  id: string;
  mainMenu: {
    links?: MainMenuLink;
  };
  mobileMenu: {
    links?: MobileMenuLink;
  };
  footerMenu: {
    links?: {
      link: NavLink;
      id?: string;
    }[];
  };
  updatedAt?: string;
  createdAt?: string;
}
export interface Settings {
  id: string;
  seoTitle?: string;
  logos: {
    main?: string | Media;
    favIcon?: string | Media;
  };
  colors: {
    primary: string;
    secondary: string;
  };
  promo: {
    html?: string;
  };
  orders: {
    adminEmail?: string;
    startingNumber?: number;
  };
  updatedAt?: string;
  createdAt?: string;
}
